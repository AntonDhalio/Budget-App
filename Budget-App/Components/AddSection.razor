<style>
    .input {
        width: 100%;
        height: 2rem;
        background: @Section.Color;
    }
</style>

<div class="collapse-button">
    <button class="btn btn-primary" type="button" @onclick="ToggleAddSection" aria-expanded="false" aria-controls="Add section collapse">
        <span class="@AddSectionButton"></span>
        <span>Add New Section</span>
    </button>
</div>
<div class="@AddSectionCollapse" aria-hidden="@collapseAddSection">
    <div class="add-section-wrapper">
        <EditForm Model=@Section OnValidSubmit="AddNewSection">
            <DataAnnotationsValidator />
            <div class="form-floating mb-3">
                <InputText class="form-control" id="name" name="name" placeholder="test" @bind-Value=Section.Name />
                <label for="name">Name</label>
                <ValidationMessage For="() => Section.Name" />
            </div>
            <div class="form-floating mb-3">
            <InputSelect class="input" @bind-Value="Section.Color">
                    @foreach (var color in ColorPalette.Colors)
                    {
                        <option value="@color" style="background-color: @color">@color</option>
                    }
                </InputSelect>
            </div>
            <div class="button-row">
                <button class="btn btn-success" type="submit">
                    <span class="oi oi-plus"></span>
                    <span>Add section</span>
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<IEnumerable<Models.Section>> OnUpdateSection { get; set; }

    private bool collapseAddSection = true;

    private string AddSectionCollapse => collapseAddSection ? "slide-up" : "slide-down";
    private string AddSectionButton => collapseAddSection ? "oi oi-chevron-bottom" : "oi oi-chevron-top";

    private void ToggleAddSection()
    {
        collapseAddSection = !collapseAddSection;
    }

    Validation.Section Section = new Validation.Section
        {
            Name = "",
            Color = "#7DCD85"
        };

    private async Task AddNewSection()
    {
        string name = Section.Name;
        string color = Section.Color;
        await BudgetRepository.AddSection(name, color);
        Section.Name = "";
        Section.Color = "#7DCD85";
        ToggleAddSection();
        await OnUpdateSection.InvokeAsync();
    }

    private async Task OnUpdateSections()
    {
        await OnUpdateSection.InvokeAsync();
    }
    
    
}
