<div class="item">
    <div class="item-summary" @onclick="ToggleDetails">
        <div class="item-start">
            <Icon IconClass="@BudgetItem.IconName" IconColor="@IconColor"/>
            <div class="item-title">@BudgetItem.Name</div>
        </div>
        <div class="item-content">
            <div class="item-sum">@CalculateAmount() kr</div>
            <div class="item-shared">
                @if (@BudgetItem.IsShared == true)
                {
                    <i class="fas fa-solid fa-users" />
                }
                else
                {
                    <i class="fas fa-solid fa-user" />
                }
            </div>
        </div>
    </div>
    @if (showDetails)
    {
        if (BudgetItem.IsShared)
        {
            <div class="item-details">
                <SubItem title="Total cost" value="@CalculateAmount()" currency="kr" BudgetItem="@BudgetItem" propertyToBind="Amount" OnUpdateAll="OnUpdateAll"/>
                <SubItem title="Percentage" value="@BudgetItem.SharedPercentage" currency="%" BudgetItem="@BudgetItem" propertyToBind="Percentage" OnUpdateAll="OnUpdateAll"/>
                <SubItem title="User cost" value="@CalculateAmount()" currency="kr" BudgetItem="@BudgetItem" OnUpdateAll="OnUpdateAll"/>
                <div class="button-group">
                    <button class="btn  @(BudgetItem.IsActive ? "btn-success" : "btn-warning") border-0" type="button" @onclick="ToggleItemActivity">
                        <span class="fas fa-solid @(BudgetItem.IsActive ? "fa-play" : "fa-play icon-small")"></span>
                        <span>/</span>
                        <span class="fas fa-solid @(BudgetItem.IsActive ? "fa-pause icon-small" : "fa-pause")"></span>
                    </button>
                    <button class="btn btn-danger border-0" type="button" @onclick="RemoveItem">
                        <span class="fas fa-regular fa-times"></span>
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="item-details">
                <SubItem title="Total cost" value="@CalculateAmount()" currency="kr" BudgetItem="@BudgetItem" propertyToBind="Amount" OnUpdateAll="OnUpdateAll"/>
                <div class="button-group">
                       <button class="btn  @(BudgetItem.IsActive ? "btn-success" : "btn-warning") border-0" type="button" @onclick="ToggleItemActivity">
                        <span class="fas fa-solid @(BudgetItem.IsActive ? "fa-play" : "fa-play icon-small")"></span>
                        <span>/</span>
                        <span class="fas fa-solid @(BudgetItem.IsActive ? "fa-pause icon-small" : "fa-pause")"></span>
                    </button>
                    <button class="btn btn-danger border-0" type="button" @onclick="RemoveItem">
                        <span class="fas fa-regular fa-times"></span>
                    </button>
                </div>
            </div>
        }
    }
</div>


@code {
    [Parameter]
    public Budget BudgetItem { get; set; }
    [Parameter]
    public string IconColor { get; set; }
    [Parameter]
    public EventCallback OnUpdateAll { get; set; }
    [Parameter]
    public EventCallback OnUpdateBudgetItems { get; set; }
    private bool showDetails = false;

    public int CalculateAmount()
    {
        int sharedAmount = BudgetItem.Amount * BudgetItem.SharedPercentage / 100;
        return sharedAmount;
    }
    private void ToggleDetails()
    {
        showDetails = !showDetails;
    }
    private async Task RemoveItem()
    {
        ToggleDetails();
        await BudgetRepository.RemoveBudgetItem(BudgetItem.Id);
        await OnUpdateBudgetItems.InvokeAsync();
    }

    private async Task ToggleItemActivity()
    {
        await BudgetRepository.ToggleItemActivityStatus(BudgetItem.Id);
        await OnUpdateAll.InvokeAsync();
        await OnUpdateBudgetItems.InvokeAsync();
    }
}
