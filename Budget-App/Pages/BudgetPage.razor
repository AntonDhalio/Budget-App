@page "/budget"
@using Budget_App.Components
@inject Data.BudgetRepository BudgetRepository

@{
}


<div>
    <h1>Budget</h1>
    @if (sections.Any())
    {
        foreach(var section in sections)
        {
            <div class="section-item">
                <Section SectionData="section" OnUpdateSection="UpdateSection" />
            </div>
        }
    }
    else
    {
        <p>Sure looks empty here! Maybe you should add a Section?</p>
    }
    <div class="collapse-button">
        <button class="btn btn-primary" type="button" @onclick="ToggleAddSection" aria-expanded=" false" aria-controls="Add section collapse">
            <span class="@AddSectionButton"></span>
            <span>Add New Section</span>
        </button>
    </div>
    <div class="@AddSectionCollapse" @onclick="ToggleAddSection" aria-hidden="@collapseAddSection">
        <form method="post" @onsubmit="AddSection">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" @bind="sectionName" />

            <button type="submit">Add Section</button>
        </form>
    </div>
</div>

@code {
    private string sectionName;
    private IEnumerable<Budget> items = Enumerable.Empty<Budget>();
    private IEnumerable<Models.Section> sections = Enumerable.Empty<Models.Section>();

    protected override async Task OnInitializedAsync()
    {
        sections = await FetchSections();
    }

    private async Task AddSection()
    {
        string name = sectionName;
        await BudgetRepository.AddSection(name);
        sectionName = "";
        sections = await FetchSections();
    }

    private async Task UpdateSection()
    {
        sections = await FetchSections();
    }

    private async Task<IEnumerable<Models.Section>> FetchSections()
    {
        return await BudgetRepository.GetAllSections(); 
    }

    private bool collapseAddSection = true;

    private string AddSectionCollapse => collapseAddSection ? "slide-up" : "slide-down";
    private string AddSectionButton => collapseAddSection ? "oi oi-chevron-bottom" : "oi oi-chevron-top";
    private void ToggleAddSection()
    {
        collapseAddSection = !collapseAddSection;
    }
}